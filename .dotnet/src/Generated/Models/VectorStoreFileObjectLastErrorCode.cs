// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace OpenAI.Internal.Models
{
    /// <summary> Enum for code in VectorStoreFileObjectLastError. </summary>
    internal readonly partial struct VectorStoreFileObjectLastErrorCode : IEquatable<VectorStoreFileObjectLastErrorCode>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="VectorStoreFileObjectLastErrorCode"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public VectorStoreFileObjectLastErrorCode(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string InternalErrorValue = "internal_error";
        private const string FileNotFoundValue = "file_not_found";
        private const string ParsingErrorValue = "parsing_error";
        private const string UnhandledMimeTypeValue = "unhandled_mime_type";

        /// <summary> internal_error. </summary>
        public static VectorStoreFileObjectLastErrorCode InternalError { get; } = new VectorStoreFileObjectLastErrorCode(InternalErrorValue);
        /// <summary> file_not_found. </summary>
        public static VectorStoreFileObjectLastErrorCode FileNotFound { get; } = new VectorStoreFileObjectLastErrorCode(FileNotFoundValue);
        /// <summary> parsing_error. </summary>
        public static VectorStoreFileObjectLastErrorCode ParsingError { get; } = new VectorStoreFileObjectLastErrorCode(ParsingErrorValue);
        /// <summary> unhandled_mime_type. </summary>
        public static VectorStoreFileObjectLastErrorCode UnhandledMimeType { get; } = new VectorStoreFileObjectLastErrorCode(UnhandledMimeTypeValue);
        /// <summary> Determines if two <see cref="VectorStoreFileObjectLastErrorCode"/> values are the same. </summary>
        public static bool operator ==(VectorStoreFileObjectLastErrorCode left, VectorStoreFileObjectLastErrorCode right) => left.Equals(right);
        /// <summary> Determines if two <see cref="VectorStoreFileObjectLastErrorCode"/> values are not the same. </summary>
        public static bool operator !=(VectorStoreFileObjectLastErrorCode left, VectorStoreFileObjectLastErrorCode right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="VectorStoreFileObjectLastErrorCode"/>. </summary>
        public static implicit operator VectorStoreFileObjectLastErrorCode(string value) => new VectorStoreFileObjectLastErrorCode(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is VectorStoreFileObjectLastErrorCode other && Equals(other);
        /// <inheritdoc />
        public bool Equals(VectorStoreFileObjectLastErrorCode other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
